NATIVE_ENABLED = true
BYTE_ENABLED = false

USE_OCAMLFIND = true
OCAMLPACKS[] =
	dynlink
	unix
	str

OCAMLOPTFLAGS += -g -thread

%.o: %.c
	$(OCAMLC) $(mapprefix -ccopt, $(CFLAGS)) -c $^

ld_util.a ld_util.cmxa: ld_header.cmx ld_util.ml ld_util.cmi ld_util.cmx ld_stubs.o
	ocamlmklib -o ld_util $(filter-out %.ml %.cmi, $^) -lbfd

OCAML_LIBS[] =
    ld_util

LocalOCamlGeneratedFiles(ld_known_modules.ml)

known_mod_table.cmxs: known_mod_table.ml
    $(OCAMLFIND) ocamlopt -o $@ -shared $^ $(OCAMLOPTFLAGS)

ld_known_modules.ml: gen_known_mod_info known_mod_table.cmxs
	./gen_known_mod_info known_mod_table.cmxs > $@

ld_ocaml.opt: ld_util.cmxa ld_util.ml \
	      ld_known_modules.cmx ld_known_modules.ml \
	      ld_ocaml.cmx ld_ocaml.ml ld_ocaml.o
    $(OCAMLFIND) ocamlopt $(OCAMLOPTFLAGS) \
	$(mapprefix -package, $(OCAMLPACKS)) \
	-cc "gcc -Wl,--whole-archive" -o $@ $(filter-out %.o %.ml, $+) \
	-linkpkg -linkall -ccopt -Wl,--no-whole-archive \
	-cclib -L.

OCamlProgram(gen_known_mod_info, gen_known_mod_info)

.DEFAULT: ld_util.cmxa ld_ocaml.opt

.PHONY: clean

clean:
	rm -f $(filter-proper-targets $(ls R, .)) *.s *.annot *.so *.a
